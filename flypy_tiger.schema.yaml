# Rime schema
# encoding: utf-8
# https://github.com/gaboolic/rime-shuangpin-fuzhuma

schema:
  schema_id: flypy_tiger
  name: 小鹤双拼+虎形辅助
  version: "20240426"
  author:
    - Functoreality gaboolic
    - 修改 潘公子
  description: |
    小鹤双拼+辅助码
  dependencies:
    - melt_eng
    - chaizi
    - radical_flypy
    - stroke
    - zrlf
    - emoji
    - easy_en


switches:
  - name: ascii_mode
    states: [ 中, Ａ ]
  - name: full_shape
    states: [ 半, 全 ]
  - name: simplification
    reset: 1
    states: [ 繁, 简 ]
  - name: emoji
    states: [ 💀, 😄 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:
  processors:
    #- lua_processor@select_character #以词定字
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    #- affix_segmentor@quanpin
    - affix_segmentor@emojis
    - affix_segmentor@verbatim ## not as the last of this list
    - affix_segmentor@soft_capslock
    - affix_segmentor@easy_en_simp
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - reverse_lookup_translator
    - reverse_lookup_translator@reverse_stroke
    - reverse_lookup_translator@reverse_zrlf
    - reverse_lookup_translator@reverse_hm
    - script_translator
    #- script_translator@quanpin
    - table_translator@emojis
    - table_translator@soft_capslock
    - lua_translator@date_translator    # 时间、日期、星期
    - lua_translator@lunar              # 农历
    - table_translator@melt_eng
    - table_translator@cn_en
    - table_translator@easy_en_simp     # 添加注释后：停用单词输入
    - lua_translator@unicode            # Unicode
    - lua_translator@number_translator  # 数字、金额大写
    - table_translator@custom_phrase

  filters:
    - lua_filter@long_word_filter                   # 长词优先（顺序要求：长词优先 > Emoji）
    - simplifier@emoji                              # Emoji
    - lua_filter@reduce_english_filter              # 降低部分英语单词在候选项的位置
    - simplifier@traditionalize                     # 简繁切换
    - uniquifier                                    # 去重

# Lua 配置: 日期、时间、星期、ISO 8601、时间戳的触发关键字
date_translator:
  date: date            # 日期： 2022-11-29
  date: rq            # 日期： 2022-11-29
  time: time            # 时间： 18:13
  week: week            # 星期： 星期二
  datetime: datetime    # ISO 8601： 2022-11-29T18:13:11+08:00
  timestamp: timestamp  # 时间戳： 1669716794

# Lua 配置：农历的触发关键字
lunar: anl  # 农历： 二〇二三年冬月二十 癸卯年（兔）冬月二十
  
# Lua 配置：长词优先
# 提升 count 个词语，插入到第 idx 个位置。
# 示例：将 2 个词插入到第 4、5 个候选项，输入 jie 得到「1接 2解 3姐 4饥饿 5极恶」
long_word_filter:
  count: 2
  idx: 1

# Lua 配置: 降低部分英语单词在候选项的位置。
# 详细介绍 https://dvel.me/posts/make-rime-en-better/#短单词置顶的问题
# 正常情况： 输入 rug 得到 「1.rug 2.如果 …… 」
# 降低之后： 输入 rug 得到 「1.如果 2.rug …… 」
# 几种模式：
# all     降低脚本内置的单词（所有 3~4 位长度、前 2~3 位是完整拼音、最后一位是声母），words 作为自定义的额外补充
# custom  完全自定义，只降低 words 里的
# none    不降低任何单词，相当于没有启用这个 Lua
# （匹配的是编码，不是单词）
reduce_english_filter:
  mode: custom  # all | custom | none
  idx: 2        # 降低到第 idx 个位置
  # 自定义的单词列表，示例列表没有降低部分常用单词，如 and cat mail Mac but bad shit ……
  words: [
    aid, ann,
    bail, bait, bam, band, bans, bat, bay, bend, bent, benz, bib, bid, bien, biz, boc, bop, bos, bud, buf, bach, bench, bush,
    cab, cad, cain, cam, cans, cap, cas, cef, chad, chan, chap, chef, cher, chew, chic, chin, chip, chit, coup, cum, cunt, cur, couch,
    dab, dag, dal, dam, dent, dew, dial, diet, dim, din, dip, dis, dit, doug, dub, dug, dunn, don,
    fab, fax, fob, fog, foul, fur,
    gag, gail, gain, gal, gam, gaol, ged, gel, ger, guam, gus, gut,
    hail, ham, hank, hans, hat, hay, heil, heir, hem, hep, hud, hum, hung, hunk, hut, hush,
    jim, jug,
    kat,
    lab, lad, lag, laid, lam, laos, lap, lat, lax, lay, led, leg, lex, liam, lib, lid, lied, lien, lies, linn, lip, lit, liz, lob, lug, lund, lung, lux, lash, loch, lush,
    mag, maid, mann, mar, mat, med, mel, mend, mens, ment, mil, mins, mint, mob, moc, mop, mos, mot, mud, mug, mum, mesh,
    nap, nat, nay, neil, nib, nip, noun, nous, nun, nut, nail, nash,
    pac, paid, pail, pain, pair, pak, pal, pam, pans, pant, pap, par, pat, paw, pax, pens, pic, pier, pies, pins, pint, pit, pix, pod, pop, pos, pot, pour, pow, pub, pinch, pouch,
    rand, rant, rent, rep, res, ret, rex, rib, rid, rig, rim, rub, rug, rum, runc, runs, ranch,
    sac, sail, sal, sam, sans, sap, saw, sax, sew, sham, shaw, shin, sig, sin, sip, sis, suit, sung, suns, sup, sur, sus,
    tad, tail, taj, tar, tax, tec, ted, tel, ter, tex, tic, tied, tier, ties, tim, tin, tit, tour, tout, tum,
    wag, wand, womens, wap, wax, weir, won,
    yan, yen,
    zach
  ]


speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba[
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  ## speller 未允许 aj 表示 an
  algebra:
    # - xform/^([aoe])$/$1$1/
    # - xform/^(ang)$/ah/
    # - xform/^([^\[]*)iu$/$1Q/
    # - xform/^([^\[]*)ei$/$1W/
    # - xform/uan$/R/
    # - xform/^([^\[]*)[uv]e$/$1T/
    # - xform/^([^\[]*)un$/$1Y/
    # - xform/^sh([^\[]+)/U$1/
    # - xform/^ch([^\[]+)/I$1/
    # - xform/^zh([^\[]+)/V$1/
    # - xform/^([^\[]*)uo$/$1O/
    # - xform/^([^\[]*)ie$/$1P/
    # - xform/i?ong$/S/
    # - xform/ing$|uai$/K/
    # - xform/^([^\[]+)ai$/$1D/
    # - xform/^([^\[]+)en$/$1F/
    # - xform/^([^\[]+)eng$/$1G/
    # - xform/[iu]ang$/L/
    # - xform/(.)ang$/$1H/
    # - xform/^([^\[]*)ian$/$1M/
    # - xform/^([^\[]+)an$/$1J/
    # - xform/^([^\[]+)ou$/$1Z/
    # - xform/^([^\[]*)[iu]a$/$1X/
    # - xform/^([^\[]*)iao$/$1N/
    # - xform/^([^\[]+)ao$/$1C/
    # - xform/^([^\[]*)ui$/$1V/
    # - xform/^([^\[]*)in$/$1B/
    # - xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/

    # 模糊音 可选择性开启
    # - derive/^z([a-z])/v$1/
    # - derive/^c([a-z])/i$1/
    # - derive/^s([a-z])/u$1/
    # - derive/^v([a-z])/z$1/
    # - derive/^i([a-z])/c$1/
    # - derive/^u([a-z])/s$1/

    - derive/^(..)[[].+$/$1/
    - derive/^(..[[].).+$/$1/
    # - derive/^([jqxy])u/$1v/
    - derive/[[]//

    ## 飞键 可选择性开启
    # - derive/^([yh])j/$1q/
    # - derive/^qx/qw/
    # - derive/^jn/jv/
    # - derive/^mn/mv/
    # - derive/^jm/jz/
    # - derive/^([y])h/$1g/
    # - derive/^([rgv])f/$1m/
    # - derive/^([rgv])c/$1n/


    
    

translator:
  dictionary: flypy_tiger.extended
  enable_completion: false
  ##  默认为不超过 2 个字的候选项显示输入码；将 2 改为 0 可关闭编码提示，
  ##  改为 1 则是只显示单字的输入码，依此类推。
  spelling_hints: 2
  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/" ## 编码提示只显示辅助码部分

  enable_user_dict: false # 是否开启自动调频 
  # preedit_format:
    # - "xform/((^|[ '])[bpmfdtnljqx])n/$1iao/"
    # - "xform/((^|[ '])\\w)g/$1eng/"
    # - "xform/((^|[ '])\\w)q/$1iu/"
    # - "xform/((^|[ '])\\w)w/$1ei/"
    # - "xform/((^|[ '])[dtnlgkhjqxyvuirzcs])r/$1uan/"
    # - "xform/((^|[ '])\\w)t/$1ve/"
    # - "xform/((^|[ '])\\w)y/$1un/"
    # - "xform/((^|[ '])[dtnlgkhvuirzcs])o/$1uo/"
    # - "xform/((^|[ '])\\w)p/$1ie/"
    # - "xform/((^|[ '])[jqx])s/$1iong/"
    # - "xform/((^|[ '])\\w)s/$1ong/"
    # - "xform/((^|[ '])\\w)d/$1ai/"
    # - "xform/((^|[ '])\\w)f/$1en/"
    # - "xform/((^|[ '])\\w)h/$1ang/"
    # - "xform/((^|[ '])\\w)j/$1an/"
    # - "xform/((^|[ '])[gkhvuirzcs])k/$1uai/"
    # - "xform/((^|[ '])\\w)k/$1ing/"
    # - "xform/((^|[ '])[jqxnl])l/$1iang/"
    # - "xform/((^|[ '])\\w)l/$1uang/"
    # - "xform/((^|[ '])\\w)z/$1ou/"
    # - "xform/((^|[ '])[gkhvuirzcs])x/$1ua/"
    # - "xform/((^|[ '])\\w)x/$1ia/"
    # - "xform/((^|[ '])\\w)c/$1ao/"
    # - "xform/((^|[ '])[dtgkhvuirzcs])v/$1ui/"
    # - "xform/((^|[ '])\\w)b/$1in/"
    # - "xform/((^|[ '])\\w)m/$1ian/"
    # - "xform/(^|[ '])([aoe])\\2(\\w)/$1$2$3/"
    # - "xform/(^|[ '])v/$1zh/"
    # - "xform/(^|[ '])i/$1ch/"
    # - "xform/(^|[ '])u/$1sh/"
    # - "xform/((^|[ '])[jqxy])v/$1u/"
    # - "xform/((^|[ '])[nl])v/$1ü/"

# 次翻译器，英文
melt_eng:
  dictionary: melt_eng     # 挂载词库 melt_eng.dict.yaml
  enable_sentence: false   # 禁止造句
  enable_user_dict: false  # 禁用用户词典
  initial_quality: 1.1     # 初始权重
  comment_format:          # 自定义提示码
    - xform/.*//           # 清空提示码

# 中英混合词汇
cn_en:
  dictionary: ""
  user_dict: en_dicts/cn_en_flypy
  db_class: stabledb
  enable_completion: true
  enable_sentence: false
  initial_quality: 0.5
  comment_format:
    - xform/^.+$//

# 自定义短语：custom_phrase.txt 
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

reverse_lookup:
  dictionary: radical_flypy # https://github.com/mirtlecn/rime-radical-pinyin
  enable_completion: true
  prefix: "az"
  suffix: "'"
  tips: 〔组字〕
  preedit_format:
    # - xlit/hspnz/一丨丿丶乙/

reverse_zrlf:
  tag: reverse_zrlf
  dictionary: zrlf
  enable_completion: true
  prefix: "alf"
  suffix: "'"
  tips: 〔两分〕
  preedit_format:
    # - xlit/hspnz/一丨丿丶乙/

reverse_hm:
  tag: reverse_hm
  dictionary: tiger
  enable_completion: true
  prefix: "ahm"
  suffix: "'"
  tips: 〔虎码〕
  preedit_format:
    - xform/^ahm/虎码:/

reverse_stroke:
  tag: reverse_stroke
  dictionary: stroke # stroke
  enable_completion: true
  prefix: "ab"
  suffix: "'"
  tips: 〔筆畫hspnz〕 # 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/


# Emoji
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false  # 在 corrector.lua 及反查中，emoji 返回空注释


# 简繁切换
traditionalize:
  option_name: traditionalization
  opencc_config: s2t.json  # s2t.json | s2hk.json | s2tw.json | s2twp.json
  tips: none               # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。
  tags: [ abc, number, gregorian_to_lunar ]  # 限制在对应 tag，不对其他如反查的内容做简繁转换
  
# 标点符号
# punctuator 下面有三个子项：
#   full_shape 全角标点映射
#   half_shape 半角标点映射
#   symbols    Rime 的预设配置是以 '/' 前缀开头输出一系列字符，自定义的 symbols_caps_v.yaml 修改成了 'V' 开头。
punctuator:
  full_shape:
    __include: default:/punctuator/full_shape  # 从 default.yaml 导入配置
  half_shape:
    __include: default:/punctuator/half_shape  # 从 default.yaml 导入配置
  symbols:
    __include: symbols_caps_v:/symbols         # 从 symbols_caps_v.yaml 导入配置

key_binder:
  import_preset: default
  bindings:
    #- { when: composing, accept: Tab, send: '[' } ## 取消注释后：tab引导辅助码
    - { when: composing, accept: Control+m, send: Return }
    - { when: composing, accept: Control+w, send: Control+BackSpace }
    - { when: has_menu, accept: semicolon, send: 2 }
    - { when: has_menu, accept: slash, send: 3 }
    - { when: composing, accept: Control+i, send: Shift+Right }
    - { when: composing, accept: Control+o, send: Shift+Left }
    ## 对以下4行取消注释后：启用光标回退至特定音节后、补充辅助码的功能
    ## （自然码等其他双拼用户请在 pinyin_switch.yaml 中设置）
    #- { when: composing, accept: Control+1, send_sequence: '{Home}{Shift+Right}[' }
    #- { when: composing, accept: Control+2, send_sequence: '{Home}{Shift+Right}{Shift+Right}[' }
    #- { when: composing, accept: Control+3, send_sequence: '{Home}{Shift+Right}{Shift+Right}{Shift+Right}[' }
    #- { when: composing, accept: Control+4, send_sequence: '{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}[' }

recognizer:
  # import_preset: default
  patterns:
    uppercase: "^[A-Z].*$"
    punct: '^/[015-9A-Za-z]+$' ## use "/er" instead of "/2"
    ## 拆字、笔画、虎码: 
    reverse_lookup: "^az[a-z]*'?$" # "[[]b[a-z]*'?$"
    reverse_stroke: "^ab[A-Za-z]*$"
    reverse_hm: "^ahm[A-Za-z]*$"
    reverse_zrlf: "^alf[A-Za-z]*$"

    easy_en_simp: "^aw[a-z]*"
    unicode: "^U[a-f0-9]+"              # 脚本将自动获取第 2 个字符 U 作为触发前缀，响应 lua_translator@unicode，输出 Unicode 字符
    number: "^R[0-9]+[.]?[0-9]*"        # 脚本将自动获取第 2 个字符 R 作为触发前缀，响应 lua_translator@number_translator，数字金额大写
    gregorian_to_lunar: "^N[0-9]{1,8}"  # 脚本将自动获取第 2 个字符 N 作为触发前缀，响应 lua_translator@lunar，公历转农历，输入 N20240115 得到「二〇二三年腊月初五」

menu:
  page_size: 5


melt_eng:
  dictionary: melt_eng
  enable_completion: true
  enable_sentence: false
  initial_quality: "-1"
  spelling_hints: 9

easy_en_simp:
  tag: easy_en_simp
  dictionary: easy_en
  enable_completion: true
  enable_sentence: false
  prefix: "aw"
  # suffix: "'"
  tips: "英文单词"
  spelling_hints: 9
  comment_format:
    - xform/^.+$//

grammar:
  language: zh-hans-t-huayu-v7-bgw
  contextual_suggestions: true
  collocation_max_length: 6
  collocation_min_length: 2
  collocation_penalty: -20
  non_collocation_penalty: -20
  weak_collocation_penalty: -26
  rear_penalty: 0

